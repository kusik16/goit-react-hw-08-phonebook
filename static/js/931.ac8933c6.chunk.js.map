{"version":3,"file":"static/js/931.ac8933c6.chunk.js","mappings":"qVASA,EAPyBA,EAAAA,GAAW,CACnCC,MAAOD,EAAAA,KAAaC,MAAM,iBAAiBC,SAAS,qBACpDC,SAAUH,EAAAA,KACRE,SAAS,yBACTE,IAAI,EAAG,wD,SCWK,SAASC,IACvB,OAAiBC,EAAAA,EAAAA,MAAVC,GAAP,eACA,GAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACIC,GAAWC,EAAAA,EAAAA,MAETC,GAASC,EAAAA,EAAAA,IAAU,CACxBC,cAAe,CACdd,MAAO,GACPE,SAAU,IAEXa,iBAAAA,EACAC,SAAU,YAA0B,IAAvBhB,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SACnBe,EAAS,CACRjB,MAAAA,EACAE,SAAAA,GAED,IAGIe,EAAW,SAAAC,GAChB,IAAQlB,EAAoBkB,EAApBlB,MAAOE,EAAagB,EAAbhB,SAOfI,EALgB,CACfN,MAAAA,EACAE,SAAAA,IAICiB,SACAC,MAAK,SAAAC,GAAG,OAAIC,aAAaC,QAAQ,QAASF,EAAIG,MAAtC,IACRJ,MAAK,kBAAMV,EAAS,YAAf,IACLe,OAAM,SAAAC,GACW,MAAbA,EAAEC,OACLlB,EAAY,uBAEZA,EAAY,0BAEb,GACF,EAED,OACC,UAACmB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACC,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACCC,GAAI,CACHC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALd,WAQC,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACC,SAACC,EAAA,EAAD,OAED,SAACC,EAAA,EAAD,CAAYb,UAAU,KAAKc,QAAQ,KAAnC,sBAGA,UAACX,EAAA,EAAD,CACCH,UAAU,OACVb,SAAUJ,EAAOgC,aACjBX,GAAI,CAAEY,GAAI,GAHX,WAKC,SAACC,EAAA,EAAD,CACCC,OAAO,SACPC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,MAAO1C,EAAO2C,OAAOvD,MACrBwD,SAAU5C,EAAO6C,aACjBC,MAAOC,QAAQ/C,EAAOgD,OAAO5D,OAC7B6D,WAAYjD,EAAOgD,OAAO5D,SAE3B,SAAC8C,EAAA,EAAD,CACCC,OAAO,SACPC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNY,KAAK,WACLb,GAAG,WACHG,aAAa,mBACbE,MAAO1C,EAAO2C,OAAOrD,SACrBsD,SAAU5C,EAAO6C,aACjBC,MAAOC,QAAQ/C,EAAOgD,OAAO1D,UAC7B2D,WAAYjD,EAAOgD,OAAO1D,YAE3B,SAAC6D,EAAA,EAAD,CACCD,KAAK,SACLd,WAAS,EACTL,QAAQ,YACRV,GAAI,CAAEY,GAAI,EAAGmB,GAAI,GACjBC,WAAYrD,EAAOsD,SAAWtD,EAAOuD,OALtC,sBASA,SAACC,EAAA,GAAD,CAAMC,WAAS,EAAf,UACC,SAACD,EAAA,GAAD,CAAME,MAAI,EAAV,UACC,SAAC,KAAD,CAAWC,GAAG,YAAd,SACE,6CAML/D,IAAY,yBAAMA,MAGrB,C","sources":["components/pages/signIn/validationSchema.js","components/pages/signIn/SignIn.js"],"sourcesContent":["import * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n\temail: Yup.string().email('Invalid email').required('Email is required'),\n\tpassword: Yup.string()\n\t\t.required('No password provided.')\n\t\t.min(8, 'Password is too short - should be 8 chars minimum.'),\n});\n\nexport default validationSchema;\n","import { useState } from 'react';\nimport { Link as ReactLink, useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nimport { useSignInMutation } from '../../../api/apiSlice';\nimport validationSchema from './validationSchema';\n\nexport default function SignIn() {\n\tconst [signIn] = useSignInMutation();\n\tconst [regError, setRegError] = useState(null);\n\tlet navigate = useNavigate();\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t},\n\t\tvalidationSchema,\n\t\tonSubmit: ({ email, password }) => {\n\t\t\tonSignIn({\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t});\n\t\t},\n\t});\n\n\tconst onSignIn = logObject => {\n\t\tconst { email, password } = logObject;\n\n\t\tconst logInfo = {\n\t\t\temail,\n\t\t\tpassword,\n\t\t};\n\n\t\tsignIn(logInfo)\n\t\t\t.unwrap()\n\t\t\t.then(res => localStorage.setItem('token', res.token))\n\t\t\t.then(() => navigate('/contacts'))\n\t\t\t.catch(e => {\n\t\t\t\tif (e.status === 400) {\n\t\t\t\t\tsetRegError('Invalid signup data');\n\t\t\t\t} else {\n\t\t\t\t\tsetRegError('Something went wrong...');\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tmarginTop: 8,\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\tSign in\n\t\t\t\t</Typography>\n\t\t\t\t<Box\n\t\t\t\t\tcomponent=\"form\"\n\t\t\t\t\tonSubmit={formik.handleSubmit}\n\t\t\t\t\tsx={{ mt: 1 }}\n\t\t\t\t>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tvalue={formik.values.email}\n\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\terror={Boolean(formik.errors.email)}\n\t\t\t\t\t\thelperText={formik.errors.email}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\tvalue={formik.values.password}\n\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\terror={Boolean(formik.errors.password)}\n\t\t\t\t\t\thelperText={formik.errors.password}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tsx={{ mt: 3, mb: 2 }}\n\t\t\t\t\t\tdisabled={!(formik.isValid && formik.dirty)}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ReactLink to=\"/register\">\n\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t</ReactLink>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t{regError && <div>{regError}</div>}\n\t\t</Container>\n\t);\n}\n"],"names":["Yup","email","required","password","min","SignIn","useSignInMutation","signIn","useState","regError","setRegError","navigate","useNavigate","formik","useFormik","initialValues","validationSchema","onSubmit","onSignIn","logObject","unwrap","then","res","localStorage","setItem","token","catch","e","status","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","handleSubmit","mt","TextField","margin","fullWidth","id","label","name","autoComplete","autoFocus","value","values","onChange","handleChange","error","Boolean","errors","helperText","type","Button","mb","disabled","isValid","dirty","Grid","container","item","to"],"sourceRoot":""}